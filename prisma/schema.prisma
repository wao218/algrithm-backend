// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  email           String           @unique
  username        String?          @unique
  createdAt       DateTime         @default(now())
  submission      Submission?
  userProblemStat UserProblemStat?

  @@map("users")
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Problem {
  id              String           @id @default(uuid())
  title           String
  slug            String
  difficulty      Difficulty // should have this constraint - CHECK (difficulty IN ('easy', 'medium', 'hard'))
  description     String
  testCases       Json? // -- e.g., [{ "input": "...", "output": "..." }]
  createdAt       DateTime         @default(now())
  submission      Submission?
  userProblemStat UserProblemStat?

  @@map("problems")
}

enum Status {
  PENDING
  CORRECT
  INCORRECT
}

model Submission {
  id        String   @id @default(uuid())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  problemId String   @unique
  problem   Problem  @relation(fields: [problemId], references: [id])
  code      String
  language  String // -- e.g., "python", "js", "cpp"
  status    Status // should have this constraint - CHECK (status IN ('pending', 'correct', 'incorrect')),
  result    Json? // -- e.g., {"passed": 3, "total": 5, "message": "..."}
  createdAt DateTime @default(now())

  @@map("submissions")
}

model UserProblemStat {
  id              String   @id @default(uuid())
  userId          String   @unique
  user            User     @relation(fields: [userId], references: [id])
  problemId       String   @unique
  problem         Problem  @relation(fields: [problemId], references: [id])
  attemps         Int      @default(0)
  lastResult      String
  lastAttemptedAt DateTime
  difficultyScore Float    @default(0) // - e.g., for adaptive scheduling

  @@map("user_problem_stats")
}
